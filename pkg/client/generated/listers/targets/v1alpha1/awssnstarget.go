/*
Copyright 2022 TriggerMesh Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/triggermesh/triggermesh/pkg/apis/targets/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AWSSNSTargetLister helps list AWSSNSTargets.
// All objects returned here must be treated as read-only.
type AWSSNSTargetLister interface {
	// List lists all AWSSNSTargets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AWSSNSTarget, err error)
	// AWSSNSTargets returns an object that can list and get AWSSNSTargets.
	AWSSNSTargets(namespace string) AWSSNSTargetNamespaceLister
	AWSSNSTargetListerExpansion
}

// aWSSNSTargetLister implements the AWSSNSTargetLister interface.
type aWSSNSTargetLister struct {
	indexer cache.Indexer
}

// NewAWSSNSTargetLister returns a new AWSSNSTargetLister.
func NewAWSSNSTargetLister(indexer cache.Indexer) AWSSNSTargetLister {
	return &aWSSNSTargetLister{indexer: indexer}
}

// List lists all AWSSNSTargets in the indexer.
func (s *aWSSNSTargetLister) List(selector labels.Selector) (ret []*v1alpha1.AWSSNSTarget, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AWSSNSTarget))
	})
	return ret, err
}

// AWSSNSTargets returns an object that can list and get AWSSNSTargets.
func (s *aWSSNSTargetLister) AWSSNSTargets(namespace string) AWSSNSTargetNamespaceLister {
	return aWSSNSTargetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AWSSNSTargetNamespaceLister helps list and get AWSSNSTargets.
// All objects returned here must be treated as read-only.
type AWSSNSTargetNamespaceLister interface {
	// List lists all AWSSNSTargets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AWSSNSTarget, err error)
	// Get retrieves the AWSSNSTarget from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AWSSNSTarget, error)
	AWSSNSTargetNamespaceListerExpansion
}

// aWSSNSTargetNamespaceLister implements the AWSSNSTargetNamespaceLister
// interface.
type aWSSNSTargetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AWSSNSTargets in the indexer for a given namespace.
func (s aWSSNSTargetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AWSSNSTarget, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AWSSNSTarget))
	})
	return ret, err
}

// Get retrieves the AWSSNSTarget from the indexer for a given namespace and name.
func (s aWSSNSTargetNamespaceLister) Get(name string) (*v1alpha1.AWSSNSTarget, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("awssnstarget"), name)
	}
	return obj.(*v1alpha1.AWSSNSTarget), nil
}
