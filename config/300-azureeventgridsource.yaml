# Copyright 2022 TriggerMesh Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azureeventgridsources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    # User-defined. Determined by the value of spec.eventTypes.
    registry.knative.dev/eventTypes: |
      []
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AzureEventGridSource
    plural: azureeventgridsources
    categories:
    - all
    - knative
    - eventing
    - sources
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        description: TriggerMesh event source for Azure Event Grid.
        type: object
        properties:
          spec:
            description: Desired state of the event source.
            type: object
            properties:
              scope:
                description: |-
                  The resource ID the event subscription applies to.

                  Can be
                  - an Azure subscription
                    /subscriptions/{subscriptionId}
                  - a resource group
                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}
                  - a top-level resource from a resource provider (including Event Grid topic)
                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
                type: string
                pattern:
                  ^\/subscriptions\/[a-z0-9-]+(?:\/resourceGroups\/[\w.()-]+(?:\/providers\/[A-Za-z.]+\/[a-zA-Z0-9][\w.-]+\/[a-zA-Z0-9][\w.-]+)?)?$
              eventTypes:
                description: |-
                  Types of events to subscribe to.

                  If not specified, Azure automatically selects all available event types for the provided 'scope'.

                  For a list of all available event types, please refer to the list of Azure services that support
                  system topics at https://docs.microsoft.com/en-us/azure/event-grid/system-topics.
                type: array
                items:
                  type: string
              endpoint:
                description: The intermediate destination of events subscribed via Event Grid, before they are retrieved by
                  this event source.
                type: object
                properties:
                  eventHubs:
                    description: Properties of an Event Hubs namespace to use as intermediate destination of events.
                    type: object
                    properties:
                      namespaceID:
                        description: |-
                          Resource ID of the Event Hubs namespace.

                          The expected format is
                            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}
                        type: string
                        pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.EventHub\/namespaces\/[A-Za-z0-9-]{6,50}$
                      hubName:
                        description: Name of the Event Hubs instance within the selected namespace. If omitted, an Event Hubs
                          instance is created on behalf of the user.
                        type: string
                        pattern: ^[A-Za-z0-9][\w.-]{0,49}$
                      consumerGroup:
                        description: A view (state, position, or offset) of an entire event hub. Consumer groups enable consuming
                          applications to each have a separate view of the event stream. They read the stream independently
                          at their own pace and with their own offsets. For more information about Event Hubs Consumer Groups,
                          please refer to https://learn.microsoft.com/en-us/azure/event-hubs/event-hubs-features#consumer-groups.
                        type: string
                    required:
                    - namespaceID
                required:
                - eventHubs
              auth:
                description: Authentication method to interact with the Azure Event Grid and Azure Event Hubs REST APIs. This
                  event source only supports the Service Principal authentication. If it not present, it will try to use Azure
                  AKS Managed Identity
                type: object
                properties:
                  servicePrincipal:
                    description: Credentials of an Azure Service Principal. For more information about service principals,
                      please refer to the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                    type: object
                    properties:
                      tenantID:
                        description: ID of the Azure Active Directory tenant.
                        type: object
                        properties:
                          value:
                            description: Literal value of the tenant ID.
                            type: string
                            format: guid
                            pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                          valueFromSecret:
                            description: A reference to a Kubernetes Secret object containing the tenant ID.
                            type: object
                            properties:
                              name:
                                type: string
                              key:
                                type: string
                            required:
                            - name
                            - key
                        oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                      clientID:
                        description: ID of the registered client/application.
                        type: object
                        properties:
                          value:
                            description: Literal value of the client ID.
                            type: string
                            format: guid
                            pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                          valueFromSecret:
                            description: A reference to a Kubernetes Secret object containing the client ID.
                            type: object
                            properties:
                              name:
                                type: string
                              key:
                                type: string
                            required:
                            - name
                            - key
                        oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                      clientSecret:
                        description: Secret associated with the registered client/application.
                        type: object
                        properties:
                          value:
                            description: Literal value of the client secret.
                            type: string
                            format: password
                          valueFromSecret:
                            description: A reference to a Kubernetes Secret object containing the client secret.
                            type: object
                            properties:
                              name:
                                type: string
                              key:
                                type: string
                            required:
                            - name
                            - key
                        oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                    required:
                    - tenantID
                    - clientID
                    - clientSecret
                required:
                - servicePrincipal
              sink:
                description: The destination of events sourced from Azure Event Grid.
                type: object
                properties:
                  ref:
                    description: Reference to an addressable Kubernetes object to be used as the destination of events.
                    type: object
                    properties:
                      apiVersion:
                        type: string
                      kind:
                        type: string
                      namespace:
                        type: string
                      name:
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                  uri:
                    description: URI to use as the destination of events.
                    type: string
                    format: uri
                anyOf:
                - required: [ref]
                - required: [uri]
              adapterOverrides:
                description: Kubernetes object parameters to apply on top of default adapter values.
                type: object
                properties:
                  annotations:
                    description: Adapter annotations.
                    type: object
                    additionalProperties:
                      type: string
                  labels:
                    description: Adapter labels.
                    type: object
                    additionalProperties:
                      type: string
                  env:
                    description: Adapter environment variables.
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                  resources:
                    description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: Requests describes the minimum amount of compute resources required. If Requests is omitted
                          for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined
                          value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                  tolerations:
                    description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
                      Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          description: Taint key that the toleration applies to.
                          type: string
                        operator:
                          description: Key's relationship to the value.
                          type: string
                          enum: [Exists, Equal]
                        value:
                          description: Taint value the toleration matches to.
                          type: string
                        effect:
                          description: Taint effect to match.
                          type: string
                          enum: [NoSchedule, PreferNoSchedule, NoExecute]
                        tolerationSeconds:
                          description: Period of time a toleration of effect NoExecute tolerates the taint.
                          type: integer
                          format: int64
                  nodeSelector:
                    description: NodeSelector only allow the object pods to be created at nodes where all selector labels
                      are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector.
                      NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                    type: object
                    additionalProperties:
                      type: string
                  affinity:
                    description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity.
                      Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
            required:
            - scope
            - endpoint
            - sink
          status:
            description: Reported status of the event source.
            type: object
            properties:
              eventSubscriptionID:
                description: Resource ID of the Event Grid subscription that is currently registered for the user-provided
                  scope.
                type: string
              eventHubID:
                description: Resource ID of the Event Hubs instance that is currently receiving events from the Azure Event
                  Grid subscription.
                type: string
              sinkUri:
                description: URI of the sink where events are currently sent to.
                type: string
                format: uri
              ceAttributes:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    source:
                      type: string
                  required:
                  - type
                  - source
              observedGeneration:
                type: integer
                format: int64
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ['True', 'False', Unknown]
                    severity:
                      type: string
                      enum: [Error, Warning, Info]
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].status
    - name: Reason
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
    - name: Sink
      type: string
      jsonPath: .status.sinkUri
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
