# Copyright 2021 TriggerMesh Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awsdynamodbtargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.targets.aws.dynamodb.result" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSDynamoDBTarget
    plural: awsdynamodbtargets
    categories:
    - all
    - knative
    - eventing
    - targets
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        description: TriggerMesh event target for AWS DynamoDB.
        properties:
          spec:
            description: Desired state of event target.
            type: object
            properties:
              awsApiKey:
                type: object
                description: API Key to interact with the Amazon DynamoDB API. For more information about AWS
                  security credentials, please refer to the AWS General Reference at
                  https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                properties:
                  secretKeyRef:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
              awsApiSecret:
                description: API Key to interact with the Amazon DynamoDB API. For more information about AWS
                  security credentials, please refer to the AWS General Reference at
                  https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                type: object
                properties:
                  secretKeyRef:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
              arn:
                description: ARN of the DynamoDB table to post events to. The expected format is documented at
                  https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazondynamodb.html
                type: string
                pattern: ^arn:aws(-cn|-us-gov)?:dynamodb:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:table\/[a-zA-Z0-9-_.]{3,255}$
            required:
            - arn
            - awsApiSecret
            - awsApiKey
          status:
            type: object
            description: Reported status of the event target.
            properties:
              observedGeneration:
                type: integer
                format: int64
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ['True', 'False', Unknown]
                    severity:
                      type: string
                      enum: [Error, Warning, Info]
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status
              address:
                type: object
                properties:
                  url:
                    type: string
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.address.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].status
    - name: Reason
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awslambdatargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.targets.aws.lambda.result" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSLambdaTarget
    plural: awslambdatargets
    categories:
    - all
    - knative
    - eventing
    - targets
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        description: TriggerMesh event target for AWS Lambda.
        properties:
          spec:
            description: Desired state of event target.
            type: object
            properties:
              awsApiKey:
                type: object
                description: API Key to interact with the Amazon Lambda API. For more information about AWS
                  security credentials, please refer to the AWS General Reference at
                  https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                properties:
                  secretKeyRef:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
              awsApiSecret:
                type: object
                description: API Secret to interact with the Amazon Lambda API. For more information about AWS
                  security credentials, please refer to the AWS General Reference at
                  https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                properties:
                  secretKeyRef:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
              arn:
                description: ARN of the Lambda function that will receive events. The expected format is documented at
                  https://docs.aws.amazon.com/service-authorization/latest/reference/list_awslambda.html
                type: string
                pattern: ^arn:aws(-cn|-us-gov)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:(function|layer|event-source-mapping):.+$
              discardCloudEventContext:
                description: Produce a new cloud event based on the response from the lambda function.
                type: boolean
          status:
            type: object
            description: Reported status of the event target.
            properties:
              observedGeneration:
                type: integer
                format: int64
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ['True', 'False', Unknown]
                    severity:
                      type: string
                      enum: [Error, Warning, Info]
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status
              address:
                type: object
                properties:
                  url:
                    type: string
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.address.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].status
    - name: Reason
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awssnstargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.targets.aws.sns.result" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSSNSTarget
    plural: awssnstargets
    categories:
    - all
    - knative
    - eventing
    - targets
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        description: TriggerMesh event target for AWS Simple Notification Service.
        properties:
          spec:
            type: object
            description: Desired state of event target.
            properties:
              awsApiKey:
                type: object
                description: API Key to interact with the SNS API. For more information about AWS
                  security credentials, please refer to the AWS General Reference at
                  https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                properties:
                  secretKeyRef:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
              awsApiSecret:
                type: object
                description: API Secret to interact with the SNS API. For more information about AWS
                  security credentials, please refer to the AWS General Reference at
                  https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                properties:
                  secretKeyRef:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
              arn:
                description: ARN of the SNS queue that will receive events. The expected format is documented at
                  https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsns.html
                type: string
                pattern: ^arn:aws(-cn|-us-gov)?:sns:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
              discardCloudEventContext:
                description: Produce a new cloud event based on the response from the SNS API call.
                type: boolean
          status:
            type: object
            description: Reported status of the event target.
            properties:
              observedGeneration:
                type: integer
                format: int64
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ['True', 'False', Unknown]
                    severity:
                      type: string
                      enum: [Error, Warning, Info]
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status
              address:
                type: object
                properties:
                  url:
                    type: string
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.address.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].status
    - name: Reason
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awssqstargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.targets.aws.sqs.result" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSSQSTarget
    plural: awssqstargets
    categories:
    - all
    - knative
    - eventing
    - targets
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        description: TriggerMesh event target for AWS Simple Queue Service.
        properties:
          spec:
            description: Desired state of event target.
            type: object
            properties:
              awsApiKey:
                description: API Key to interact with the Amazon SQS API. For more information about AWS
                  security credentials, please refer to the AWS General Reference at
                  https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                type: object
                properties:
                  secretKeyRef:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
              awsApiSecret:
                description: API Secret to interact with the Amazon SQS API. For more information about AWS
                  security credentials, please refer to the AWS General Reference at
                  https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                type: object
                properties:
                  secretKeyRef:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
              arn:
                description: ARN of the SQS queue that will receive events. The expected format is documented at
                  https://docs.aws.amazon.com/service-authorization/latest/reference/list_awslambda.html
                type: string
                pattern: ^arn:aws(-cn|-us-gov)?:sqs:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
              discardCloudEventContext:
                description: Produce a new cloud event based on the response from the lambda function.
                type: boolean
          status:
            type: object
            description: Reported status of the event target.
            properties:
              observedGeneration:
                type: integer
                format: int64
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ['True', 'False', Unknown]
                    severity:
                      type: string
                      enum: [Error, Warning, Info]
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status
              address:
                type: object
                properties:
                  url:
                    type: string
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.address.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].status
    - name: Reason
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awskinesistargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.targets.aws.kinesis.result" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSKinesisTarget
    plural: awskinesistargets
    categories:
    - all
    - knative
    - eventing
    - targets
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        description: An event target that can stream events into an AWS Kinesis stream.
        properties:
          spec:
            type: object
            properties:
              awsApiKey:
                type: object
                description: API Key to interact with the Amazon Kinesis API. For more information about AWS
                  security credentials, please refer to the AWS General Reference at
                  https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                properties:
                  secretKeyRef:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
              awsApiSecret:
                type: object
                description: API Secret to interact with the Amazon Kinesis API. For more information about AWS
                  security credentials, please refer to the AWS General Reference at
                  https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                properties:
                  secretKeyRef:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
              arn:
                description: ARN of the Kinesis stream that will receive events. The expected format is documented at
                  https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonkinesis.html
                type: string
                pattern: ^arn:aws(-cn|-us-gov)?:kinesis:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:stream/.+$
              partition:
                description: A Kinesis partition name is required for the target to know where to stream the events to.
                type: string
              discardCloudEventContext:
                description: Produce a new cloud event based on the response from the Kinesis invocation.
                type: boolean
          status:
            type: object
            description: Reported status of the event target.
            properties:
              observedGeneration:
                type: integer
                format: int64
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ['True', 'False', Unknown]
                    severity:
                      type: string
                      enum: [Error, Warning, Info]
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status
              address:
                type: object
                properties:
                  url:
                    type: string
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.address.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].status
    - name: Reason
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awss3targets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "io.triggermesh.awss3.object.put" },
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.targets.aws.s3.result" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSS3Target
    plural: awss3targets
    categories:
    - all
    - knative
    - eventing
    - targets
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        description: An event target that can stream events into an AWS S3 bucket.
        properties:
          spec:
            description: Desired state of event target.
            type: object
            properties:
              awsApiKey:
                type: object
                description: API Key to interact with the Amazon S3 API. For more information about AWS
                  security credentials, please refer to the AWS General Reference at
                  https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                properties:
                  secretKeyRef:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
              awsApiSecret:
                type: object
                description: API Secret to interact with the Amazon S3 API. For more information about AWS
                  security credentials, please refer to the AWS General Reference at
                  https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                properties:
                  secretKeyRef:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
              arn:
                type: string
                description: ARN of the S3 bucket that will receive events. The expected format is documented at
                  https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html
                pattern: ^arn:aws(-cn|-us-gov)?:s3:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
              discardCloudEventContext:
                description: Produce a new cloud event based on the response from the Kinesis invocation.
                type: boolean
          status:
            type: object
            description: Reported status of the event target.
            properties:
              acceptedEventTypes:
                type: array
                items:
                  type: string
              ceAttributes:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    source:
                      type: string
                  required:
                  - type
                  - source
              observedGeneration:
                type: integer
                format: int64
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ['True', 'False', Unknown]
                    severity:
                      type: string
                      enum: [Error, Warning, Info]
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status
              address:
                type: object
                properties:
                  url:
                    type: string
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.address.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].status
    - name: Reason
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
