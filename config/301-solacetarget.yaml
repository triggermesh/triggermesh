# Copyright 2023 TriggerMesh Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: solacetargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: SolaceTarget
    plural: solacetargets
    categories:
    - all
    - knative
    - eventing
    - targets
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        description: TriggerMesh event target for Solace.
        properties:
          spec:
            description: Desired state of event target.
            type: object
            properties:
              url:
                description: Solace server used to bootstrap the connection.
                type: string
                minLength: 1
              queueName:
                description: Queue name to stream the target events to.
                type: string
              auth:
                description: Authentication method used to interact with Solace.
                type: object
                properties:
                  saslEnable:
                    description: Boolean to indicate if SASL is enabled.
                    type: boolean
                  tlsEnable:
                    description: Boolean to indicate if TLS is enabled.
                    type: boolean
                  username:
                    description: Solace account username.
                    type: string
                  password:
                    description: Solace account password.
                    type: object
                    properties:
                      value:
                        description: Plain text password.
                        type: string
                      valueFromSecret:
                        description: A reference to a Kubernetes Secret object containing the password.
                        type: object
                        properties:
                          name:
                            type: string
                          key:
                            type: string
                        required:
                        - name
                        - key
                    oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                  tls:
                    description: TLS Authentication method to interact with Solace.
                    type: object
                    properties:
                      ca:
                        description: The value to the configured CA.
                        type: object
                        properties:
                          valueFromSecret:
                            description: A reference to a Kubernetes Secret object containing the value.
                            type: object
                            properties:
                              name:
                                type: string
                              key:
                                type: string
                            required:
                            - name
                            - key
                        required:
                        - valueFromSecret
                      clientCert:
                        description: The value of the SSL Client Cert.
                        type: object
                        properties:
                          valueFromSecret:
                            description: A reference to a Kubernetes Secret object containing the Client Cert content.
                            type: object
                            properties:
                              name:
                                type: string
                              key:
                                type: string
                            required:
                            - name
                            - key
                        required:
                        - valueFromSecret
                      clientKey:
                        description: The value of the SSL Client Key.
                        type: object
                        properties:
                          valueFromSecret:
                            description: A reference to a Kubernetes Secret object containing the Client Key content.
                            type: object
                            properties:
                              name:
                                type: string
                              key:
                                type: string
                            required:
                            - name
                            - key
                        required:
                        - valueFromSecret
                      skipVerify:
                        description: SkipVerify controls whether a client verifies the server's certificate chain and host
                          name. If skipVerify is true, crypto/tls accepts any certificate presented by the server and any
                          host name in that certificate. In this mode, TLS is susceptible to machine-in-the-middle attacks
                          unless custom verification is used. This should be used only for testing.
                        type: boolean
              discardCloudEventContext:
                description: Whether to omit CloudEvent context attributes in messages sent to Solace. When this property
                  is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent
                  data is included.
                type: boolean
              adapterOverrides:
                description: Kubernetes object parameters to apply on top of default adapter values.
                type: object
                properties:
                  labels:
                    description: Adapter labels.
                    type: object
                    additionalProperties:
                      type: string
                  env:
                    description: Adapter environment variables.
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                  public:
                    description: Adapter visibility scope.
                    type: boolean
                  resources:
                    description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: Requests describes the minimum amount of compute resources required. If Requests is omitted
                          for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined
                          value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                  tolerations:
                    description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
                      Tolerations only works on kubernetes deployment-based components, not on knative-based components.
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          description: Taint key that the toleration applies to.
                          type: string
                        operator:
                          description: Key's relationship to the value.
                          type: string
                          enum: [Exists, Equal]
                        value:
                          description: Taint value the toleration matches to.
                          type: string
                        effect:
                          description: Taint effect to match.
                          type: string
                          enum: [NoSchedule, PreferNoSchedule, NoExecute]
                        tolerationSeconds:
                          description: Period of time a toleration of effect NoExecute tolerates the taint.
                          type: integer
                          format: int64
                  nodeSelector:
                    description: NodeSelector only allow the object pods to be created at nodes where all selector labels
                      are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector.
                      NodeSelector only works on kubernetes deployment-based components, not on knative-based components.
                    type: object
                    additionalProperties:
                      type: string
                  affinity:
                    description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity.
                      Affinity only works on kubernetes deployment-based components, not on knative-based components.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
            required:
            - url
            - queueName
          status:
            type: object
            description: Reported status of the event target.
            properties:
              observedGeneration:
                type: integer
                format: int64
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ['True', 'False', Unknown]
                    severity:
                      type: string
                      enum: [Error, Warning, Info]
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status
              address:
                type: object
                properties:
                  url:
                    type: string
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.address.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].status
    - name: Reason
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
