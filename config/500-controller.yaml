# Copyright 2022 TriggerMesh Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: triggermesh-controller
  namespace: triggermesh
  labels:
    app.kubernetes.io/part-of: triggermesh

spec:
  replicas: 1
  selector:
    matchLabels:
      app: triggermesh-controller

  template:
    metadata:
      labels:
        app: triggermesh-controller

    spec:
      serviceAccountName: triggermesh-controller

      containers:
      - name: controller
        terminationMessagePolicy: FallbackToLogsOnError
        image: ko://github.com/triggermesh/triggermesh/cmd/triggermesh-controller

        resources:
          requests:
            cpu: 50m
            memory: 150Mi
          limits:
            cpu: 200m
            memory: 500Mi

        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # Logging/observability configuration
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: triggermesh.io
        # Source adapters
        - name: AWSSQSSOURCE_IMAGE
          value: ko://github.com/triggermesh/triggermesh/cmd/awssqssource-adapter

        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: [all]

        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
