# Copyright 2020-2021 TriggerMesh Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: httppollersources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: HTTPPollerSource
    plural: httppollersources
    categories:
    - all
    - knative
    - eventing
    - sources
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        description: TriggerMesh event source for sourcing events by polling HTTP/S endpoints.
        type: object
        properties:
          spec:
            description: Desired state of the event source.
            type: object
            properties:
              eventType:
                description: "Value of the CloudEvents 'type' attribute to set on ingested events. Describes the type of
                  event related to the originating occurrence. Please refer to the CloudEvents specification for more
                  details: https://github.com/cloudevents/spec/blob/v1.0.1/spec.md#type"
                type: string
              eventSource:
                description: "Value of the CloudEvents 'source' attribute to set on ingested events. Identifies the
                  context in which an event happened. Must be expressed as a URI-reference. Please refer to the
                  CloudEvents specification for more details: https://github.com/cloudevents/spec/blob/v1.0.1/spec.md#source-1"
                type: string
              endpoint:
                description: HTTP/S URL of the endpoint to poll data from.
                type: string
                format: url
                pattern: ^https?:\/\/.+$
              method:
                description: HTTP request method to use in requests to the specified 'endpoint'.
                type: string
                enum: [GET, POST, PUT, PATCH, DELETE]
              skipVerify:
                description: Controls whether the HTTP client verifies the server's certificate chain and host name
                  when communicating over TLS.
                type: boolean
              caCertificate:
                description: CA certificate in X.509 format the HTTP client should use to verify the identity of remote
                  servers when communicating over TLS.
                type: string
              basicAuthUsername:
                description: User name to set in HTTP requests that require HTTP Basic authentication.
                type: string
              basicAuthPassword:
                description: Password to set in HTTP requests that require HTTP Basic authentication.
                type: object
                properties:
                  value:
                    description: Literal value of the password.
                    type: string
                  valueFromSecret:
                    description: A reference to a Kubernetes Secret object containing the password.
                    type: object
                    properties:
                      name:
                        description: Name of the Secret object.
                        type: string
                      key:
                        description: Key from the Secret object.
                        type: string
                    required:
                    - name
                    - key
                oneOf:
                - required: [value]
                - required: [valueFromSecret]
              headers:
                description: HTTP headers to include in HTTP requests sent to the endpoint.
                type: object
                additionalProperties:
                  type: string
              interval:
                description: Duration which defines how often the HTTP/S endpoint should be polled. Expressed as a
                  duration string, which format is documented at https://pkg.go.dev/time#ParseDuration.
                type: string
              sink:
                description: The destination of events generated by polling the HTTP/S endpoint.
                type: object
                properties:
                  ref:
                    description: Reference to an addressable Kubernetes object to be used as the destination of events.
                    type: object
                    properties:
                      apiVersion:
                        type: string
                      kind:
                        type: string
                      namespace:
                        type: string
                      name:
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                  uri:
                    description: URI to use as the destination of events.
                    type: string
                    format: uri
                oneOf:
                - required: [ref]
                - required: [uri]
            required:
            - eventType
            - method
            - endpoint
            - interval
            - sink
          status:
            description: Reported status of the event source.
            type: object
            properties:
              sinkUri:
                description: URI of the sink where events are currently sent to.
                type: string
                format: uri
              ceAttributes:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    source:
                      type: string
                  required:
                  - type
                  - source
              observedGeneration:
                type: integer
                format: int64
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ['True', 'False', Unknown]
                    severity:
                      type: string
                      enum: [Error, Warning, Info]
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].status
    - name: Reason
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
    - name: Sink
      type: string
      jsonPath: .status.sinkUri
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
