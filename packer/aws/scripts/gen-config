#!/bin/bash
set -eo pipefail

TRIGGERMESH_VERSION=${TRIGGERMESH_VERSION:-$(git describe --tags --abbrev=0)}
KNATIVE_SERVING_VERSION=${KNATIVE_SERVING_VERSION:-$(cat KNATIVE_SERVING_VERSION)}
KNATIVE_EVENTING_VERSION=${KNATIVE_EVENTING_VERSION:-$(cat KNATIVE_EVENTING_VERSION)}
KNATIVE_NET_KOURIER_VERSION=${KNATIVE_NET_KOURIER_VERSION:-$(cat KNATIVE_NET_KOURIER_VERSION)}

cat <<EOF
k3os:
  datasource: aws

  k3s_args:
  - "--no-deploy=traefik"

hostname: triggermesh

run_cmd:
  - "service crond start"

write_files:
- encoding: gz+b64
  content: $(curl -sSfL https://github.com/knative/serving/releases/download/knative-v${KNATIVE_SERVING_VERSION}/serving-crds.yaml | gzip -c  | base64)
  owner: root
  path: /var/lib/rancher/k3s/server/manifests/knative/serving-crds.yaml
  permissions: '0644'
- encoding: gz+b64
  content: $(curl -sSfL https://github.com/knative/serving/releases/download/knative-v${KNATIVE_SERVING_VERSION}/serving-core.yaml | sed '/^[ ]*queue-proxy-cert-secret: .*/a \\n  ingress.class: "kourier.ingress.networking.knative.dev"' | gzip -c  | base64)
  owner: root
  path: /var/lib/rancher/k3s/server/manifests/knative/serving-core.yaml
  permissions: '0644'
- encoding: gz+b64
  content: $(curl -sSfL https://github.com/knative-sandbox/net-kourier/releases/download/knative-v${KNATIVE_NET_KOURIER_VERSION}/kourier.yaml | gzip -c  | base64)
  owner: root
  path: /var/lib/rancher/k3s/server/manifests/knative/kourier.yaml
  permissions: '0644'
- encoding: gz+b64
  content: $(curl -sSfL https://github.com/knative/eventing/releases/download/knative-v${KNATIVE_EVENTING_VERSION}/eventing-crds.yaml | gzip -c  | base64)
  owner: root
  path: /var/lib/rancher/k3s/server/manifests/knative/eventing-crds.yaml
  permissions: '0644'
- encoding: gz+b64
  content: $(curl -sSfL https://github.com/knative/eventing/releases/download/knative-v${KNATIVE_EVENTING_VERSION}/eventing-core.yaml | gzip -c  | base64)
  owner: root
  path: /var/lib/rancher/k3s/server/manifests/knative/eventing-core.yaml
  permissions: '0644'
- encoding: gz+b64
  content: $(curl -sSfL https://github.com/triggermesh/triggermesh/releases/download/${TRIGGERMESH_VERSION}/triggermesh-crds.yaml | gzip -c  | base64)
  owner: root
  path: /var/lib/rancher/k3s/server/manifests/triggermesh/triggermesh-crds.yaml
  permissions: '0644'
- encoding: gz+b64
  content: $(curl -sSfL https://github.com/triggermesh/triggermesh/releases/download/${TRIGGERMESH_VERSION}/triggermesh.yaml | gzip -c  | base64)
  owner: root
  path: /var/lib/rancher/k3s/server/manifests/triggermesh/triggermesh.yaml
  permissions: '0644'
- encoding: ""
  content: |-
    #!/bin/bash
    set -e

    # workaround: https://github.com/rancher/k3os/pull/833

    PART=\$(blkid -L K3OS_STATE)
    DEV=\$(echo "\$PART" | sed -r 's/((\d+)p)?\d+\$/\2/')
    NUM=\$(echo "\$PART" | sed 's!.*[^0-9]!!')

    echo -e "Yes" | parted \$DEV unit % resizepart \$NUM 100% ---pretend-input-tty
    partprobe \$DEV
    sleep 2
    resize2fs \$PART

  owner: root
  path: /etc/local.d/growpart-live.start
  permissions: '0755'
- encoding: ""
  content: |-
    #!/bin/bash
    set -e

    timeout 180s bash -c 'until kubectl get cm/config-domain -n knative-serving; do sleep 5; done'

    export EC2_INSTANCE_IP=\$(curl -sSL http://checkip.amazonaws.com)
    timeout 900 bash -c 'until kubectl patch configmap/config-domain -n knative-serving --type merge --patch "{\"data\":{\"\${EC2_INSTANCE_IP}.sslip.io\":\"\"}}"; do sleep 5; done'

  owner: root
  path: /etc/local.d/serving-config-domain.start
  permissions: '0755'
- encoding: ""
  content: |-
    #!/bin/bash
    set -e

    export EC2_INSTANCE_IP=\$(curl -sSL http://checkip.amazonaws.com)
    timeout 300 bash -c 'until kubectl patch configmap/config-domain -n knative-serving --type json --patch "[{\"op\": \"remove\", \"path\": \"/data/\${EC2_INSTANCE_IP}.sslip.io\"}]"; do sleep 5; done'

  owner: root
  path: /etc/local.d/serving-config-domain.stop
  permissions: '0755'
- encoding: ""
  content: |-
    #!/bin/bash
    set -e

    cat >/etc/logrotate.d/k3s-service <<EOF
    /var/log/k3s-service.log {
      su root root
      maxsize 10M
      missingok
      notifempty
      copytruncate
    }
    EOF

  owner: root
  path: /etc/local.d/config-k3s-logrotate.start
  permissions: '0755'
EOF
