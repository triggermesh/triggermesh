name: OSS Licenses

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  boilerplate:
    name: Apache 2.0 License
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.19'

    - name: Go caches
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ github.job }}-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ github.job }}-${{ runner.os }}-go-

    - name: Install reviewdog
      uses: reviewdog/action-setup@v1

    - name: Install boilerplate-check
      run: go install github.com/mattmoor/boilerplate-check/cmd/boilerplate-check@latest

    - name: Check license boilerplate
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        reviewdog -conf=.github/workflows/config/reviewdog.yaml \
          -runners=license-go \
          -filter-mode=diff_context \
          -reporter=github-check \
          -fail-on-error=true
        reviewdog -conf=.github/workflows/config/reviewdog.yaml \
          -runners=license-yaml \
          -filter-mode=diff_context \
          -reporter=github-check \
          -fail-on-error=true

  vendor:
    name: Third-Party Licenses
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.19'

    - name: Go caches
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ github.job }}-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ github.job }}-${{ runner.os }}-go-

    - name: Install go-licenses
      run: go install github.com/google/go-licenses@v1.2.1

    - name: Check third-party licenses
      run: |
        go-licenses save ./... --save_path LICENSES/vendor/ --force

        git_status="$(git status --porcelain)"
        if [[ ${git_status} ]]; then
            echo -e 'Third-party licenses are out-of-date. Please run `go-licenses save`\n'
            echo "${git_status}"
            exit 1
        fi

    - name: Check kodata
      run: hack/kodata-check.sh
