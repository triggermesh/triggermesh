name: Generated Files

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  gomod:
    name: Go Modules
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.17'

    - name: Go caches
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
        key: ${{ github.job }}-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ github.job }}-${{ runner.os }}-go-

    - name: Check modules requirements
      run: |
        go mod tidy

        git_status="$(git status --porcelain)"
        if [[ ${git_status} ]]; then
            echo -e 'Go modules are out-of-date. Please run `go mod tidy`\n'
            echo "${git_status}"
            exit 1
        fi

  codegen:
    name: Generated Code
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.17'

    - name: Go caches
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ github.job }}-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ github.job }}-${{ runner.os }}-go-

    - name: Kubernetes code generation
      run: |
        mod_path="$(go mod edit -json | jq -r '.Module.Path')"

        tmp_gopath="$(mktemp -d)"
        export GOPATH="$tmp_gopath"

        tmp_repo_path="${tmp_gopath}/src/${mod_path}"
        mkdir -p "${tmp_repo_path%/*}"
        ln -s "$GITHUB_WORKSPACE" "$tmp_repo_path"

        make codegen

        git_status="$(git status --porcelain)"
        if [[ ${git_status} ]]; then
            echo -e 'Generated Kubernetes code is out-of-date. Please run `make codegen`\n'
            echo "${git_status}"
            exit 1
        fi
